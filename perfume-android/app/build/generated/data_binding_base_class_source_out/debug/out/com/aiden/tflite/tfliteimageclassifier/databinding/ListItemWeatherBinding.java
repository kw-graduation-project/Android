// Generated by view binder compiler. Do not edit!
package com.aiden.tflite.tfliteimageclassifier.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aiden.tflite.tfliteimageclassifier.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemWeatherBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvHumidity;

  @NonNull
  public final TextView tvRainType;

  @NonNull
  public final TextView tvRecommends;

  @NonNull
  public final TextView tvSky;

  @NonNull
  public final TextView tvTemp;

  @NonNull
  public final TextView tvTime;

  private ListItemWeatherBinding(@NonNull LinearLayout rootView, @NonNull TextView tvHumidity,
      @NonNull TextView tvRainType, @NonNull TextView tvRecommends, @NonNull TextView tvSky,
      @NonNull TextView tvTemp, @NonNull TextView tvTime) {
    this.rootView = rootView;
    this.tvHumidity = tvHumidity;
    this.tvRainType = tvRainType;
    this.tvRecommends = tvRecommends;
    this.tvSky = tvSky;
    this.tvTemp = tvTemp;
    this.tvTime = tvTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemWeatherBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemWeatherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_weather, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemWeatherBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvHumidity;
      TextView tvHumidity = ViewBindings.findChildViewById(rootView, id);
      if (tvHumidity == null) {
        break missingId;
      }

      id = R.id.tvRainType;
      TextView tvRainType = ViewBindings.findChildViewById(rootView, id);
      if (tvRainType == null) {
        break missingId;
      }

      id = R.id.tvRecommends;
      TextView tvRecommends = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommends == null) {
        break missingId;
      }

      id = R.id.tvSky;
      TextView tvSky = ViewBindings.findChildViewById(rootView, id);
      if (tvSky == null) {
        break missingId;
      }

      id = R.id.tvTemp;
      TextView tvTemp = ViewBindings.findChildViewById(rootView, id);
      if (tvTemp == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      return new ListItemWeatherBinding((LinearLayout) rootView, tvHumidity, tvRainType,
          tvRecommends, tvSky, tvTemp, tvTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
